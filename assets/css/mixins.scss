// ---------------------------------------------------------------------------------------------------------------------
//  Useful Mixins
// ---------------------------------------------------------------------------------------------------------------------
//
// Requirements:
//   Sass 3.2.0+
//
// Mixins:
//   @ min-screen(width)                      // shortcut for @media screen and (min-width ...)
//   @ max-screen(width)                      // shortcut for @media screen and (max-width ...)
//   @ screen(min-width, max-width)           // shortcut for @media screen and (min-width ...) and (max-width ...)
//   ---
//   @ min-screen-height(height)              // shortcut for @media screen and (min-height ...)
//   @ max-screen-height(height)              // shortcut for @media screen and (max-height ...)
//   @ screen-height(min-height, max-height)  // shortcut for @media screen and (min-height ...) and (max-height ...)
//   ---
//   @ iphone3                                // only iPhone (2, 3G, 3GS) landscape & portrait
//   @ iphone3(landscape)                     // only iPhone (2, 3G, 3GS) only landscape
//   @ iphone3(portrait)                      // only iPhone (2, 3G, 3GS) only portrait
//   ---
//   @ iphone4                                // only iPhone (4, 4S) landscape & portrait
//   @ iphone4(landscape)                     // only iPhone (4, 4S) only landscape
//   @ iphone4(portrait)                      // only iPhone (4, 4S) only portrait
//   ---
//   @ iphone5                                // only iPhone (5) landscape & portrait
//   @ iphone5(landscape)                     // only iPhone (5) only landscape
//   @ iphone5(portrait)                      // only iPhone (5) only portrait
//   ---
//   @ ipad                                   // all iPads (1, 2, 3, 4, Mini) landscape & portrait
//   @ ipad(landscape)                        // all iPads (1, 2, 3, 4, Mini) only landscape
//   @ ipad(portrait)                         // all iPads (1, 2, 3, 4, Mini) only portrait
//   ---
//   @ ipad-retina                            // only iPad (3, 4) landscape & portrait
//   @ ipad-retina(landscape)                 // only iPad (3, 4) only landscape
//   @ ipad-retina(portrait)                  // only iPad (3, 4) only portrait
//   ---
//   @ hdpi(ratio)                            // devices with hidpi displays (default ratio: 1.3)
//   ---
//   @ retina(file, type, width, height)      //
//   ---
//   @ border-radius(radius)
//   ---
//   @ box-shadow(top, left, blur, color, inset: false)
//   ---
//   @ shadow
//   ---
//   @ calc(tag, param)
//   ---
//   @ rem(property,values...)
//   ---
//
// ---------------------------------------------------------------------------------------------------------------------

// ---------------------------------------------------------------------------------------------------------------------
// --- Global Constants ------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------

$gray-0: #090909;
$gray-1: #0f1112;
$gray-2: #141719;
$gray-3: #222427;
$gray-4: #7d8081;
$gray-5: #d6d6d8;
$gray-6: #f2f2f2;
$gray-7: white;
$silver-1: #e0e0e0;
$silver-2: #d9d9d9;
$index: #4fb535;
$headerHeight: 40px;
$sidebarWidth: 270px;
$em-base: 14px;
$linkedin: #007bb6;
$facebook: #3b5998;
$twitter: #00aced;
$gplus: #dd4b39;
$bufferapp: #333333;
$pinterest: #cb2027;
$asset-base-path: '/assets/images/' !default;

@function image-url($file) {
  @return url($asset-base-path + $file);
}

// ---------------------------------------------------------------------------------------------------------------------
// --- screen ----------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------

@mixin screen($resMin, $resMax) {
    @media screen and (min-width: $resMin) and (max-width: $resMax) {
        @content;
    }
}

@mixin max-screen($res) {
    @media screen and (max-width: $res) {
        @content;
    }
}

@mixin min-screen($res) {
    @media screen and (min-width: $res) {
        @content;
    }
}

@mixin screen-height($resMin, $resMax) {
    @media screen and (min-height: $resMin) and (max-height: $resMax) {
        @content;
    }
}

@mixin max-screen-height($res) {
    @media screen and (max-height: $res) {
        @content;
    }
}

@mixin min-screen-height($res) {
    @media screen and (min-height: $res) {
        @content;
    }
}

// ---------------------------------------------------------------------------------------------------------------------
// --- hdpi ------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------

// Based on bourbon hidpi-media-queries file (https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/css3/_hidpi-media-query.scss)
// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)

@mixin hdpi($ratio: 1.3) {
    @media only screen and (-webkit-min-device-pixel-ratio: $ratio), only screen and (min--moz-device-pixel-ratio: $ratio), only screen and (-o-min-device-pixel-ratio: #{$ratio}/1), only screen and (min-resolution: #{round($ratio * 96)}dpi), only screen and (min-resolution: #{$ratio}dppx) {
        @content;
    }
}

// ---------------------------------------------------------------------------------------------------------------------
// --- iphone ----------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------

@mixin iphone3($orientation: all) {
    $deviceMinWidth: 320px;
    $deviceMaxWidth: 480px;
    $devicePixelRatio: 1;
    @if $orientation == all {
        @media only screen and (min-device-width: $deviceMinWidth) and (max-device-width: $deviceMaxWidth) and (-webkit-device-pixel-ratio: $devicePixelRatio) {
            @content;
        }
    }
    @else {
        @media only screen and (min-device-width: $deviceMinWidth) and (max-device-width: $deviceMaxWidth) and (-webkit-device-pixel-ratio: $devicePixelRatio) and (orientation: #{$orientation}) {
            @content;
        }
    }
}

// ---------------------------------------------------------------------------------------------------------------------
// --- iphone-retina ---------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------

@mixin iphone4($orientation: all) {
    $deviceMinWidth: 320px;
    $deviceMaxWidth: 480px;
    $devicePixelRatio: 2;
    $deviceAspectRatio: "2/3";
    @if $orientation == all {
        @media only screen and (min-device-width: $deviceMinWidth) and (max-device-width: $deviceMaxWidth) and (-webkit-device-pixel-ratio: $devicePixelRatio) and (device-aspect-ratio: $deviceAspectRatio) {
            @content;
        }
    }
    @else {
        @media only screen and (min-device-width: $deviceMinWidth) and (max-device-width: $deviceMaxWidth) and (-webkit-device-pixel-ratio: $devicePixelRatio) and (device-aspect-ratio: 2 / 3) and (orientation: #{$orientation}) {
            @content;
        }
    }
}

// ---------------------------------------------------------------------------------------------------------------------
// --- iphone-5 --------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------

@mixin iphone5($orientation: all) {
    $deviceMinWidth: 320px;
    $deviceMaxWidth: 568px;
    $devicePixelRatio: 2;
    $deviceAspectRatio: "40/71";
    @if $orientation == all {
        @media only screen and (min-device-width: $deviceMinWidth) and (max-device-width: $deviceMaxWidth) and (-webkit-device-pixel-ratio: $devicePixelRatio) and (device-aspect-ratio: $deviceAspectRatio) {
            @content;
        }
    }
    @else {
        @media only screen and (min-device-width: $deviceMinWidth) and (max-device-width: $deviceMaxWidth) and (-webkit-device-pixel-ratio: $devicePixelRatio) and (device-aspect-ratio: $deviceAspectRatio) and (orientation: #{$orientation}) {
            @content;
        }
    }
}

// ---------------------------------------------------------------------------------------------------------------------
// --- ipads (all) -----------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------

@mixin ipad($orientation: all) {
    $deviceMinWidth: 768px;
    $deviceMaxWidth: 1024px;
    @if $orientation == all {
        @media only screen and (min-device-width: $deviceMinWidth) and (max-device-width: $deviceMaxWidth) {
            @content;
        }
    }
    @else {
        @media only screen and (min-device-width: $deviceMinWidth) and (max-device-width: $deviceMaxWidth) and (orientation: #{$orientation}) {
            @content;
        }
    }
}

// ---------------------------------------------------------------------------------------------------------------------
// --- ipad-retina -----------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------

@mixin ipad-retina($orientation: all) {
    $deviceMinWidth: 768px;
    $deviceMaxWidth: 1024px;
    $devicePixelRatio: 2;
    @if $orientation == all {
        @media only screen and (min-device-width: $deviceMinWidth) and (max-device-width: $deviceMaxWidth) and (-webkit-device-pixel-ratio: $devicePixelRatio) {
            @content;
        }
    }
    @else {
        @media only screen and (min-device-width: $deviceMinWidth) and (max-device-width: $deviceMaxWidth) and (-webkit-device-pixel-ratio: $devicePixelRatio) and (orientation: #{$orientation}) {
            @content;
        }
    }
}

// ---------------------------------------------------------------------------------------------------------------------
// --- retina-images ---------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------

@mixin retina($file, $type, $width, $height: "") {
    background-image: image-url($file + "." + $type);
    -webkit-background-size: $width #{$height};
    background-size: $width #{$height};
}

// ---------------------------------------------------------------------------------------------------------------------
// --- border-radius ---------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------

@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    border-radius: $radius;
    background-clip: padding-box;
    /* stops bg color from leaking outside the border: */
}

// ---------------------------------------------------------------------------------------------------------------------
// --- box-shadow ------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
    @if $inset {
        -webkit-box-shadow: inset $left $top $blur $color;
        -moz-box-shadow: inset $left $top $blur $color;
        box-shadow: inset $left $top $blur $color;
    }
    @else {
        -webkit-box-shadow: $left $top $blur $color;
        -moz-box-shadow: $left $top $blur $color;
        box-shadow: $left $top $blur $color;
    }
}

// ---------------------------------------------------------------------------------------------------------------------
// --- shadow ----------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------

@mixin shadow {
    border: thin solid rgba(0, 0, 0, 0.1);
    //@include box-shadow(0, 0, 1px, rgba(0, 0, 0, 0.2));
}

// ---------------------------------------------------------------------------------------------------------------------
// --- calc ------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------
//@mixin calc($property, $expression) {
//  #{$property}: -moz-calc(#{$expression});
//  #{$property}: -webkit-calc(#{$expression});
//  #{$property}: calc(#{$expression});
//}
@mixin calc($property, $expression) {
    #{$property}: -moz-calc(#{$expression});
    #{$property}: -webkit-calc(#{$expression});
    #{$property}: calc(#{$expression});
}

// ---------------------------------------------------------------------------------------------------------------------
// --- rem -------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------

@mixin rem($property, $values...) {
    $max: length($values);
    $pxValues: "";
    $remValues: "";
    @for $i from 1 through $max {
        $value: nth($values, $i);
        $pxValues: #{$pxValues + $value};
        @if $i < $max {
            $pxValues: #{$pxValues + " "};
        }
    }
    @for $i from 1 through $max {
        $value: nth($values, $i);
        $remValues: #{$remValues + $value / $em-base}rem;
        @if $i < $max {
            $remValues: #{$remValues + " "};
        }
    }
    #{$property}: $pxValues;
    #{$property}: $remValues;
}

// ---------------------------------------------------------------------------------------------------------------------
// --- small -----------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------

@mixin small {
    font-family: Tahoma, Verdana, Segoe, sans-serif;
}